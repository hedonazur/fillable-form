# Generated by Django 5.0.1 on 2024-03-31 23:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('author', models.CharField(max_length=100)),
                ('publication_year', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clientFirstName', models.CharField(blank=True, max_length=200, null=True)),
                ('clientLastName', models.CharField(blank=True, max_length=200, null=True)),
                ('addressLine1', models.CharField(blank=True, max_length=200, null=True)),
                ('clientLogo', models.ImageField(default='default_logo.jpg', upload_to='company_logos')),
                ('province', models.CharField(blank=True, choices=[('Gauteng', 'Gauteng'), ('Free State', 'Free State'), ('Limpopo', 'Limpopo')], max_length=100)),
                ('postalCode', models.CharField(blank=True, max_length=10, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=100, null=True)),
                ('emailAddress', models.CharField(blank=True, max_length=100, null=True)),
                ('uniqueId', models.CharField(blank=True, help_text='Not to fill', max_length=100, null=True)),
                ('slug', models.SlugField(blank=True, help_text='Not to fill', max_length=500, null=True, unique=True)),
                ('date_created', models.DateTimeField(blank=True, help_text='Not to fill', null=True)),
                ('last_updated', models.DateTimeField(blank=True, help_text='Not to fill', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clientFirstName', models.CharField(blank=True, max_length=200, null=True)),
                ('clientLastName', models.CharField(blank=True, max_length=200, null=True)),
                ('addressLine1', models.CharField(blank=True, max_length=200, null=True)),
                ('clientLogo', models.ImageField(default='default_logo.jpg', upload_to='company_logos')),
                ('province', models.CharField(blank=True, choices=[('Gauteng', 'Gauteng'), ('Free State', 'Free State'), ('Limpopo', 'Limpopo')], max_length=100)),
                ('postalCode', models.CharField(blank=True, max_length=10, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=100, null=True)),
                ('emailAddress', models.CharField(blank=True, max_length=100, null=True)),
                ('uniqueId', models.CharField(blank=True, help_text='Not to fill', max_length=100, null=True)),
                ('slug', models.SlugField(blank=True, help_text='Not to fill', max_length=500, null=True, unique=True)),
                ('date_created', models.DateTimeField(blank=True, help_text='Not to fill', null=True)),
                ('last_updated', models.DateTimeField(blank=True, help_text='Not to fill', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Proforma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('salesmanName', models.CharField(blank=True, max_length=200, null=True)),
                ('number', models.CharField(blank=True, max_length=100, null=True)),
                ('delivery', models.BooleanField(default=False)),
                ('deliveryPrice', models.FloatField(blank=True, null=True)),
                ('total', models.FloatField(blank=True, null=True)),
                ('grandTotal', models.FloatField(blank=True, help_text='including delivery', null=True)),
                ('uniqueId', models.CharField(blank=True, help_text='Not to fill', max_length=100, null=True)),
                ('slug', models.SlugField(blank=True, help_text='Not to fill', max_length=500, null=True, unique=True)),
                ('date_created', models.DateTimeField(blank=True, help_text='Not to fill', null=True)),
                ('last_updated', models.DateTimeField(blank=True, help_text='Not to fill', null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='formApp.client')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('quantity', models.FloatField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('currency', models.CharField(choices=[('S/', 'Sol'), ('$', 'USD')], default='$', max_length=100)),
                ('uniqueId', models.CharField(blank=True, help_text='Not to fill', max_length=100, null=True)),
                ('slug', models.SlugField(blank=True, help_text='Not to fill', max_length=500, null=True, unique=True)),
                ('date_created', models.DateTimeField(blank=True, help_text='Not to fill', null=True)),
                ('last_updated', models.DateTimeField(blank=True, help_text='Not to fill', null=True)),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='formApp.proforma')),
            ],
        ),
    ]
